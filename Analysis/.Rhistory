BodyTemp_sd   = sd(mean_BT_smooth, na.rm = TRUE),
Activity_mean = mean(mean_activity_percent, na.rm = TRUE),
Activity_sd   = sd(mean_activity_percent, na.rm = TRUE),
HR_mean       = mean(mean_heartrate, na.rm = TRUE),
HR_sd         = sd(mean_heartrate, na.rm = TRUE),
THI_mean      = mean(phase_mean_THI, na.rm = TRUE),
THI_sd        = sd(phase_mean_THI, na.rm = TRUE),
.groups = "drop"
)
summary_table <- dat %>%
filter(!is.na(phase_mean_THI)) %>%
mutate(
thi_range = case_when(
heat_stress == "Comfort"   ~ "< 68",
heat_stress == "Mild"      ~ "68–71.9",
heat_stress == "Moderate"  ~ "72–74.9",
heat_stress == "Alert"     ~ "75–78.9",
heat_stress == "Danger"    ~ "79–83.9",
heat_stress == "Emergency" ~ "≥ 84",
TRUE ~ NA_character_),
heat_stress = factor(heat_stress,
levels = c("Comfort", "Mild", "Moderate", "Alert", "Danger", "Emergency")),
thi_range = factor(thi_range,
levels = c("< 68", "68–71.9", "72–74.9", "75–78.9", "79–83.9", "≥ 84"))
) %>%
group_by(thi_range, heat_stress)
View(summary_table)
##################################################################################
############################ OVP analysis: winter day ############################
##################################################################################
rm(list = ls()); gc() # make sure environment is clean
export = TRUE # Export?
# Activate package libraries
library(patchwork)
library(feather)
library(mgcv)
library(car)
library(ggeffects)
library(MASS)
library(emmeans)
library(gamm4)
library(effects)
library(stats)
library(lme4)
library(lmerTest)
library(performance)
library(tidyverse)
# Set WD and get source code functions
setwd("/Users/serpent/Documents/VHL/OVP/Code/Analysis")
source("SEM_(MWE)/functions.R")
# Read data
dat <- read_csv("/Users/serpent/Documents/VHL/OVP/Data/ovp_data_26_03_25.csv")
# Clean + classify heat stress level
summary_table <- dat %>%
filter(!is.na(phase_mean_THI)) %>%
mutate(
thi_range = case_when(
heat_stress == "Comfort"   ~ "< 68",
heat_stress == "Mild"      ~ "68–71.9",
heat_stress == "Moderate"  ~ "72–74.9",
heat_stress == "Alert"     ~ "75–78.9",
heat_stress == "Danger"    ~ "79–83.9",
heat_stress == "Emergency" ~ "≥ 84",
TRUE ~ NA_character_),
heat_stress = factor(heat_stress,
levels = c("Comfort", "Mild", "Moderate", "Alert", "Danger", "Emergency")),
thi_range = factor(thi_range,
levels = c("< 68", "68–71.9", "72–74.9", "75–78.9", "79–83.9", "≥ 84"))
) %>%
group_by(thi_range, heat_stress) %>%
summarise(
N = n(),
BodyTemp_mean = mean(mean_BT_smooth, na.rm = TRUE),
BodyTemp_sd   = sd(mean_BT_smooth, na.rm = TRUE),
Activity_mean = mean(mean_activity_percent, na.rm = TRUE),
Activity_sd   = sd(mean_activity_percent, na.rm = TRUE),
HR_mean       = mean(mean_heartrate, na.rm = TRUE),
HR_sd         = sd(mean_heartrate, na.rm = TRUE),
THI_mean      = mean(phase_mean_THI, na.rm = TRUE),
THI_sd        = sd(phase_mean_THI, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(across(where(is.numeric), round, 2))
View(dat)
# Clean + classify heat stress level
summary_table <- dat %>%
filter(!is.na(phase_mean_THI)) %>%
mutate(
thi_range = case_when(
heat_stress == "comfort"   ~ "< 68",
heat_stress == "mild"      ~ "68–71.9",
heat_stress == "moderate"  ~ "72–74.9",
heat_stress == "alert"     ~ "75–78.9",
heat_stress == "danger"    ~ "79–83.9",
heat_stress == "emergency" ~ "≥ 84",
TRUE ~ NA_character_),
heat_stress = factor(heat_stress,
levels = c("Comfort", "Mild", "Moderate", "Alert", "Danger", "Emergency")),
thi_range = factor(thi_range,
levels = c("< 68", "68–71.9", "72–74.9", "75–78.9", "79–83.9", "≥ 84"))
) %>%
group_by(thi_range, heat_stress) %>%
summarise(
N = n(),
BodyTemp_mean = mean(mean_BT_smooth, na.rm = TRUE),
BodyTemp_sd   = sd(mean_BT_smooth, na.rm = TRUE),
Activity_mean = mean(mean_activity_percent, na.rm = TRUE),
Activity_sd   = sd(mean_activity_percent, na.rm = TRUE),
HR_mean       = mean(mean_heartrate, na.rm = TRUE),
HR_sd         = sd(mean_heartrate, na.rm = TRUE),
THI_mean      = mean(phase_mean_THI, na.rm = TRUE),
THI_sd        = sd(phase_mean_THI, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(across(where(is.numeric), round, 2))
View(summary_table)
table(dat$heat_stress)
# Clean + classify heat stress level
summary_table <- dat %>%
filter(!is.na(phase_mean_THI)) %>%
mutate(
thi_range = case_when(
heat_stress == "comfort"   ~ "< 68",
heat_stress == "mild discomfort"  ~ "68–71.9",
heat_stress == "moderate"  ~ "72–74.9",
heat_stress == "alert"     ~ "75–78.9",
heat_stress == "danger"    ~ "79–83.9",
heat_stress == "emergency" ~ "≥ 84",
TRUE ~ NA_character_),
heat_stress = factor(heat_stress,
levels = c("comfort", "mild discomfort", "moderate", "alert", "danger", "emergency")),
thi_range = factor(thi_range,
levels = c("< 68", "68–71.9", "72–74.9", "75–78.9", "79–83.9", "≥ 84"))
) %>%
group_by(thi_range, heat_stress) %>%
summarise(
N = n(),
BodyTemp_mean = mean(mean_BT_smooth, na.rm = TRUE),
BodyTemp_sd   = sd(mean_BT_smooth, na.rm = TRUE),
Activity_mean = mean(mean_activity_percent, na.rm = TRUE),
Activity_sd   = sd(mean_activity_percent, na.rm = TRUE),
HR_mean       = mean(mean_heartrate, na.rm = TRUE),
HR_sd         = sd(mean_heartrate, na.rm = TRUE),
THI_mean      = mean(phase_mean_THI, na.rm = TRUE),
THI_sd        = sd(phase_mean_THI, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(across(where(is.numeric), round, 2))
View(summary_table)
# Clean + classify heat stress level
summary_table <- dat %>%
filter(!is.na(phase_mean_THI)) %>%
mutate(
thi_range = case_when(
heat_stress == "comfort"   ~ "< 68",
heat_stress == "mild discomfort"  ~ "68–71.9",
heat_stress == "discomfort"  ~ "72–74.9",
heat_stress == "alert"     ~ "75–78.9",
heat_stress == "danger"    ~ "79–83.9",
heat_stress == "emergency" ~ "≥ 84",
TRUE ~ NA_character_),
heat_stress = factor(heat_stress,
levels = c("comfort", "mild discomfort", "discomfort", "alert", "danger", "emergency")),
thi_range = factor(thi_range,
levels = c("< 68", "68–71.9", "72–74.9", "75–78.9", "79–83.9", "≥ 84"))
) %>%
group_by(thi_range, heat_stress) %>%
summarise(
N = n(),
BodyTemp_mean = mean(mean_BT_smooth, na.rm = TRUE),
BodyTemp_sd   = sd(mean_BT_smooth, na.rm = TRUE),
Activity_mean = mean(mean_activity_percent, na.rm = TRUE),
Activity_sd   = sd(mean_activity_percent, na.rm = TRUE),
HR_mean       = mean(mean_heartrate, na.rm = TRUE),
HR_sd         = sd(mean_heartrate, na.rm = TRUE),
THI_mean      = mean(phase_mean_THI, na.rm = TRUE),
THI_sd        = sd(phase_mean_THI, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(across(where(is.numeric), round, 2))
View(summary_table)
summary_table %>%
gt() %>%
tab_header(
title = md("**Descriptive Summary by Heat Stress Category (THI Range)**")
) %>%
cols_label(
thi_range = "THI Range",
heat_stress = "Heat Stress",
N = "n obs",
BodyTemp_mean = "Mean",
BodyTemp_sd = "SD",
Activity_mean = "Mean",
Activity_sd = "SD",
HR_mean = "Mean",
HR_sd = "SD",
THI_mean = "Mean",
THI_sd = "SD"
) %>%
tab_spanner(label = "Body Temperature (°C)", columns = c(BodyTemp_mean, BodyTemp_sd)) %>%
tab_spanner(label = "Activity (%)", columns = c(Activity_mean, Activity_sd)) %>%
tab_spanner(label = "Heart Rate (bpm)", columns = c(HR_mean, HR_sd)) %>%
tab_spanner(label = "THI", columns = c(THI_mean, THI_sd)) %>%
fmt_number(columns = where(is.numeric), decimals = 2) %>%
cols_align(align = "center", columns = everything())
summary_table %>%
gt() %>%
tab_header(
title = md("**Descriptive Summary by Heat Stress Category (THI Range)**")
) %>%
cols_label(
thi_range = "THI Range",
heat_stress = "Heat Stress",
N = "n obs",
BodyTemp_mean = "Mean",
BodyTemp_sd = "SD",
Activity_mean = "Mean",
Activity_sd = "SD",
HR_mean = "Mean",
HR_sd = "SD",
THI_mean = "Mean",
THI_sd = "SD"
) %>%
tab_spanner(label = "Body Temperature (°C)", columns = c(BodyTemp_mean, BodyTemp_sd)) %>%
tab_spanner(label = "Activity (%)", columns = c(Activity_mean, Activity_sd)) %>%
tab_spanner(label = "Heart Rate (bpm)", columns = c(HR_mean, HR_sd)) %>%
tab_spanner(label = "THI", columns = c(THI_mean, THI_sd)) %>%
fmt_number(columns = where(is.numeric), decimals = 2) %>%
cols_align(align = "center", columns = everything())
library(dplyr)
library(gt)
library(purrr)
prep_data <- data %>%
filter(phase %in% c("day", "night")) %>%
mutate(
thi_range = case_when(
heat_stress == "comfort"   ~ "< 68",
heat_stress == "mild discomfort"  ~ "68–71.9",
heat_stress == "discomfort"  ~ "72–74.9",
heat_stress == "alert"     ~ "75–78.9",
heat_stress == "danger"    ~ "79–83.9",
heat_stress == "emergency" ~ "≥ 84",
TRUE ~ NA_character_),
heat_stress = factor(heat_stress,
levels = c("comfort", "mild discomfort", "discomfort", "alert", "danger", "emergency")),
thi_range = factor(thi_range,
levels = c("< 68", "68–71.9", "72–74.9", "75–78.9", "79–83.9", "≥ 84")),
phase = factor(phase, levels = c("day", "night"))
) %>%
filter(!is.na(heat_stress), !is.na(season), !is.na(mean_BT_smooth), !is.na(mean_activity_percent), !is.na(mean_heartrate))
prep_data <- dat %>%
filter(phase %in% c("day", "night")) %>%
mutate(
thi_range = case_when(
heat_stress == "comfort"   ~ "< 68",
heat_stress == "mild discomfort"  ~ "68–71.9",
heat_stress == "discomfort"  ~ "72–74.9",
heat_stress == "alert"     ~ "75–78.9",
heat_stress == "danger"    ~ "79–83.9",
heat_stress == "emergency" ~ "≥ 84",
TRUE ~ NA_character_),
heat_stress = factor(heat_stress,
levels = c("comfort", "mild discomfort", "discomfort", "alert", "danger", "emergency")),
thi_range = factor(thi_range,
levels = c("< 68", "68–71.9", "72–74.9", "75–78.9", "79–83.9", "≥ 84")),
phase = factor(phase, levels = c("day", "night"))
) %>%
filter(!is.na(heat_stress), !is.na(season), !is.na(mean_BT_smooth), !is.na(mean_activity_percent), !is.na(mean_heartrate))
# Unique season × phase combinations
season_phase_combos <- prep_data %>%
distinct(season, phase)
# Function to summarise one subset
summarise_subset <- function(df, season_i, phase_i) {
df %>%
filter(season == season_i, phase == phase_i) %>%
group_by(thi_range, heat_stress) %>%
summarise(
N = n(),
BodyTemp = paste0(round(mean(mean_BT_smooth, na.rm = TRUE), 2), " ± ", round(sd(mean_BT_smooth, na.rm = TRUE), 2)),
Activity = paste0(round(mean(mean_activity_percent, na.rm = TRUE), 2), " ± ", round(sd(mean_activity_percent, na.rm = TRUE), 2)),
HR = paste0(round(mean(mean_heartrate, na.rm = TRUE), 2), " ± ", round(sd(mean_heartrate, na.rm = TRUE), 2)),
.groups = "drop"
) %>%
mutate(Season = season_i, Phase = phase_i) %>%
select(Season, Phase, thi_range, heat_stress, N, BodyTemp, Activity, HR)
}
# Apply over all combinations
combined_summary <- purrr::map2_dfr(season_phase_combos$season, season_phase_combos$phase,
~ summarise_subset(prep_data, .x, .y))
df %>%
filter(season == season_i, phase == phase_i) %>%
group_by(thi_range, heat_stress) %>%
summarise(
N = n(),
BodyTemp = paste0(round(mean(mean_BT_smooth, na.rm = TRUE), 2), " ± ", round(sd(mean_BT_smooth, na.rm = TRUE), 2)),
Activity = paste0(round(mean(mean_activity_percent, na.rm = TRUE), 2), " ± ", round(sd(mean_activity_percent, na.rm = TRUE), 2)),
HR = paste0(round(mean(mean_heartrate, na.rm = TRUE), 2), " ± ", round(sd(mean_heartrate, na.rm = TRUE), 2)),
.groups = "drop"
) %>%
mutate(Season = season_i, Phase = phase_i) %>%
dplyr::select(Season, Phase, thi_range, heat_stress, N, BodyTemp, Activity, HR)
# Function to summarise one subset
summarise_subset <- function(df, season_i, phase_i) {
df %>%
filter(season == season_i, phase == phase_i) %>%
group_by(thi_range, heat_stress) %>%
summarise(
N = n(),
BodyTemp = paste0(round(mean(mean_BT_smooth, na.rm = TRUE), 2), " ± ", round(sd(mean_BT_smooth, na.rm = TRUE), 2)),
Activity = paste0(round(mean(mean_activity_percent, na.rm = TRUE), 2), " ± ", round(sd(mean_activity_percent, na.rm = TRUE), 2)),
HR = paste0(round(mean(mean_heartrate, na.rm = TRUE), 2), " ± ", round(sd(mean_heartrate, na.rm = TRUE), 2)),
.groups = "drop"
) %>%
mutate(Season = season_i, Phase = phase_i) %>%
dplyr::select(Season, Phase, thi_range, heat_stress, N, BodyTemp, Activity, HR)
}
# Apply over all combinations
combined_summary <- purrr::map2_dfr(season_phase_combos$season, season_phase_combos$phase,
~ summarise_subset(prep_data, .x, .y))
combined_summary %>%
arrange(Season, thi_range, Phase) %>%
gt(groupname_col = "Season") %>%
tab_header(
title = md("**Descriptive Summary by Season, Phase, and Heat Stress**")
) %>%
cols_label(
thi_range = "THI Range",
heat_stress = "Heat Stress",
Phase = "Phase",
N = "n obs",
BodyTemp = "Body Temp (°C)",
Activity = "Activity (%)",
HR = "Heart Rate (bpm)"
) %>%
cols_align(align = "center", columns = everything()) %>%
tab_style(
style = cell_fill(color = "#f7f7f7"),
locations = cells_body(
rows = Phase == "night"
)
) %>%
tab_options(
row_group.as_column = TRUE,
table.font.size = px(12),
heading.title.font.size = px(14)
)
prep_data <- dat %>%
filter(phase %in% c("day", "night")) %>%
mutate(
thi_range = case_when(
heat_stress == "comfort"   ~ "< 68",
heat_stress == "mild discomfort"  ~ "68–71.9",
heat_stress == "discomfort"  ~ "72–74.9",
heat_stress == "alert"     ~ "75–78.9",
heat_stress == "danger"    ~ "79–83.9",
heat_stress == "emergency" ~ "≥ 84",
TRUE ~ NA_character_),
heat_stress = factor(heat_stress,
levels = c("comfort", "mild discomfort", "discomfort", "alert", "danger", "emergency")),
thi_range = factor(thi_range,
levels = c("< 68", "68–71.9", "72–74.9", "75–78.9", "79–83.9", "≥ 84")),
phase = factor(phase, levels = c("day", "night"))
) %>%
filter(!is.na(heat_stress), !is.na(season), !is.na(mean_BT_smooth), !is.na(mean_activity_percent), !is.na(mean_heartrate))
# Unique season × phase combinations
season_phase_combos <- prep_data %>%
distinct(season, phase)
# Function to summarise one subset
summarise_subset <- function(df, season_i, phase_i) {
df_sub <- df %>%
filter(season == season_i, phase == phase_i) %>%
group_by(thi_range, heat_stress) %>%
summarise(
N = n(),
BodyTemp_mean = mean(mean_BT_smooth, na.rm = TRUE),
BodyTemp_sd   = sd(mean_BT_smooth, na.rm = TRUE),
Activity_mean = mean(mean_activity_percent, na.rm = TRUE),
Activity_sd   = sd(mean_activity_percent, na.rm = TRUE),
HR_mean       = mean(mean_heartrate, na.rm = TRUE),
HR_sd         = sd(mean_heartrate, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(
BodyTemp = ifelse(N == 1,
sprintf("%.2f", BodyTemp_mean),
sprintf("%.2f ± %.2f", BodyTemp_mean, BodyTemp_sd)),
Activity = ifelse(N == 1,
sprintf("%.2f", Activity_mean),
sprintf("%.2f ± %.2f", Activity_mean, Activity_sd)),
HR = ifelse(N == 1,
sprintf("%.2f", HR_mean),
sprintf("%.2f ± %.2f", HR_mean, HR_sd)),
Season = season_i,
Phase = phase_i
) %>%
select(Season, Phase, thi_range, heat_stress, N, BodyTemp, Activity, HR)
return(df_sub)
}
# Apply over all combinations
combined_summary <- purrr::map2_dfr(season_phase_combos$season, season_phase_combos$phase,
~ summarise_subset(prep_data, .x, .y))
df_sub <- df %>%
filter(season == season_i, phase == phase_i) %>%
group_by(thi_range, heat_stress) %>%
summarise(
N = n(),
BodyTemp_mean = mean(mean_BT_smooth, na.rm = TRUE),
BodyTemp_sd   = sd(mean_BT_smooth, na.rm = TRUE),
Activity_mean = mean(mean_activity_percent, na.rm = TRUE),
Activity_sd   = sd(mean_activity_percent, na.rm = TRUE),
HR_mean       = mean(mean_heartrate, na.rm = TRUE),
HR_sd         = sd(mean_heartrate, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(
BodyTemp = ifelse(N == 1,
sprintf("%.2f", BodyTemp_mean),
sprintf("%.2f ± %.2f", BodyTemp_mean, BodyTemp_sd)),
Activity = ifelse(N == 1,
sprintf("%.2f", Activity_mean),
sprintf("%.2f ± %.2f", Activity_mean, Activity_sd)),
HR = ifelse(N == 1,
sprintf("%.2f", HR_mean),
sprintf("%.2f ± %.2f", HR_mean, HR_sd)),
Season = season_i,
Phase = phase_i
) %>%
dplyr::select(Season, Phase, thi_range, heat_stress, N, BodyTemp, Activity, HR)
# Function to summarise one subset
summarise_subset <- function(df, season_i, phase_i) {
df_sub <- df %>%
filter(season == season_i, phase == phase_i) %>%
group_by(thi_range, heat_stress) %>%
summarise(
N = n(),
BodyTemp_mean = mean(mean_BT_smooth, na.rm = TRUE),
BodyTemp_sd   = sd(mean_BT_smooth, na.rm = TRUE),
Activity_mean = mean(mean_activity_percent, na.rm = TRUE),
Activity_sd   = sd(mean_activity_percent, na.rm = TRUE),
HR_mean       = mean(mean_heartrate, na.rm = TRUE),
HR_sd         = sd(mean_heartrate, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(
BodyTemp = ifelse(N == 1,
sprintf("%.2f", BodyTemp_mean),
sprintf("%.2f ± %.2f", BodyTemp_mean, BodyTemp_sd)),
Activity = ifelse(N == 1,
sprintf("%.2f", Activity_mean),
sprintf("%.2f ± %.2f", Activity_mean, Activity_sd)),
HR = ifelse(N == 1,
sprintf("%.2f", HR_mean),
sprintf("%.2f ± %.2f", HR_mean, HR_sd)),
Season = season_i,
Phase = phase_i
) %>%
dplyr::select(Season, Phase, thi_range, heat_stress, N, BodyTemp, Activity, HR)
return(df_sub)
}
# Apply over all combinations
combined_summary <- purrr::map2_dfr(season_phase_combos$season, season_phase_combos$phase,
~ summarise_subset(prep_data, .x, .y))
combined_summary %>%
arrange(Season, thi_range, Phase) %>%
gt(groupname_col = "Season") %>%
tab_header(
title = md("**Descriptive Summary by Season, Phase, and Heat Stress**")
) %>%
cols_label(
thi_range = "THI Range",
heat_stress = "Heat Stress",
Phase = "Phase",
N = "n obs",
BodyTemp = "Body Temp (°C)",
Activity = "Activity (%)",
HR = "Heart Rate (bpm)"
) %>%
cols_align(align = "center", columns = everything()) %>%
tab_style(
style = cell_fill(color = "#f7f7f7"),
locations = cells_body(
rows = Phase == "night"
)
) %>%
tab_options(
row_group.as_column = TRUE,
table.font.size = px(12),
heading.title.font.size = px(14)
)
library(flextable)
library(officer)
# Convert the long summary table to flextable
ft <- combined_summary %>%
arrange(Season, thi_range, Phase) %>%
flextable() %>%
set_header_labels(
thi_range = "THI Range",
heat_stress = "Heat Stress",
Phase = "Phase",
N = "n obs",
BodyTemp = "Body Temp (°C)",
Activity = "Activity (%)",
HR = "Heart Rate (bpm)"
) %>%
autofit() %>%
add_header_lines("Descriptive Summary by Season, Phase, and Heat Stress") %>%
theme_box()
# Export to Word
doc <- read_docx() %>%
body_add_flextable(ft) %>%
body_add_par("", style = "Normal")
print(doc, target = "heat_stress_summary.docx")
