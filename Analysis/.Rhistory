############################################################################################################################
########################################  MSc Diss. Forest Succession Data Analysis ########################################
############################################################################################################################
rm(list = ls())   # make sure environment is clean
set.seed(42)      # set seed for reproducibility
# ----- Session set-up -----
# Load necessary libraries
library(nlme)
library(car)
library(MuMIn)
library(emmeans)
library(mgcv)
library(gstat)
library(ggeffects)
library(cowplot)
library(gridExtra)
library(psych)
library(spdep)
library(gstat)
library(sp)
library(corrplot)
library(factoextra)
library(doParallel)
library(foreach)
library(tidyverse)
export = FALSE # export?
# Check which device is running
node_name <- Sys.info()["nodename"]
# Set file paths conditionally
path <- ifelse(node_name == "threadeast", "/home/merlin/traits_output/parametric",
"/Users/serpent/Documents/MSc/Thesis/Code/analysis/parametric")
parallel = FALSE # parallel?
if (parallel) { # set cluster
num_cores <-  ifelse(node_name == "threadeast", 32, 8)
cl <- makeCluster(num_cores)
registerDoParallel(cl, cores = num_cores)
getDoParWorkers()
}
dat <- read_csv(paste0(path, "/traits_parametric.csv")) %>%
# Make sure biome is a factor
mutate(biome = as.factor(biome)) %>%
# Add a small jitter to coords
mutate(
LAT_jitter = LAT + runif(n(), -0.0001, 0.0001),
LON_jitter = LON + runif(n(), -0.0001, 0.0001))
View(dat)
dat
View(dat)
heigth <- dat %>%
select(height, standage, temp_pc, soil_pc, rain_pc, ph, elevation)
heigth <- dat %>%
select(height, standage, temp_pc, soil_pc, rain_pc, soil_ph, elevation)
height %>%ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = 7, show.legend = FALSE) +
scale_color_viridis_d()+
scale_size(range=c(2,12)) +
scale_x_log10()+
labs(x="GDP per capita", y="Life expectancy")
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = 7, show.legend = FALSE) +
scale_color_viridis_d()+
scale_size(range=c(2,12)) +
scale_x_log10()+
labs(x="GDP per capita", y="Life expectancy")
View(heigth)
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = 7, show.legend = FALSE)
heigth <- dat %>%
select(height, standage, temp_pc, soil_pc, rain_pc, soil_ph, elevation)
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = 7, show.legend = FALSE) +
scale_color_viridis_d()+
scale_size(range=c(2,12)) +
scale_x_log10()+
labs(x="GDP per capita", y="Life expectancy")
height
height <- dat %>%
select(height, standage, temp_pc, soil_pc, rain_pc, soil_ph, elevation)
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = 7, show.legend = FALSE) +
scale_color_viridis_d()+
scale_size(range=c(2,12)) +
scale_x_log10()+
labs(x="GDP per capita", y="Life expectancy")
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = 7) +
labs(x="Temperature (PC)", y="Tree Height (LogScale)")
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = .7) +
labs(x="Temperature (PC)", y="Tree Height (LogScale)")
rm(height)
height <- dat %>%
select(height, standage, temp_pc, soil_pc, rain_pc, soil_ph, elevation) %>%
filter(standage <= 100)
rm(heigth)
height <- dat %>%
select(height, standage, temp_pc, soil_pc, rain_pc, soil_ph, elevation) %>%
filter(standage <= 100)
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = .7) +
labs(x="Temperature (PC)", y="Tree Height (LogScale)") +
transition_time(standage)+
labs(title = "Standage: {frame_time}")
library(gganimate)
library(gapminder)
library(tidyverse)
height <- dat %>%
select(height, standage, temp_pc, soil_pc, rain_pc, soil_ph, elevation) %>%
filter(standage <= 100)
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = .7) +
labs(x="Temperature (PC)", y="Tree Height (LogScale)") +
transition_time(standage)+
labs(title = "Standage: {frame_time}")
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = .7) +
labs(x="Temperature (PC)", y="Tree Height (LogScale)") +
transition_events(standage)+
labs(title = "Standage: {frame_time}")
?transition_time
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = .7) +
labs(x="Temperature (PC)", y="Tree Height (LogScale)") +
transition_states(standage)+
labs(title = "Standage: {frame_time}")
height %>% ggplot(aes(x=temp_pc, y=height)) +
geom_point(alpha = .7) +
labs(x="Temperature (PC)", y="Tree Height (LogScale)") +
transition_states(standage)+
labs(title = "Standage: {frame_time}") +
ease_aes("cubic-in-out")
list.files("/Users/serpent/Documents/Website")
